import { SalonWorker } from '../entities/salon_worker.entity';

export interface CheckServiceTimeAvailabilityDto {
  salonId: string;
  serviceId: string;
  date: string;
  startTime: string;
}

export interface CheckServiceTimeAvailabilityResponseDto {
  slots: BookingSlot[];
  nextAvailableSlot?: BookingSlot;
}

export interface GetAvailableSlotsRequestDto {
  salonId: string;
  serviceId: string;
  date: string;
}

export interface GetAvailableSlotsResponseDto {
  salonId: string;
  serviceId: string;
  date: string;
  isHoliday: boolean;
  times: string[];
}

export interface BookingSlot {
  serviceId: string;
  date: string;
  startTime: string;
  duration: number;
  buffer: number;
  worker: SalonWorker;
}

export interface BookingRequestDto {
  salonId: string;
  userId: string;
  serviceId: string;
  date: string;
  startTime: string;
  workerId: string;
}

export interface SalonRankedRequestDto {
  categoryId: number;
  longitude: number;
  latitude: number;
  date: string;
  time: string;
}

export type SalonWithRank = {
  id: string;
  name: string;
  ownerName: string;
  location: string;
  phone: string;
  email: string;
  description: string;
  longitude: number;
  latitude: number;
  rank: number;
};

export interface PayHereNotifyDTO {
  merchant_id: string;
  order_id: string;
  payment_id: string;
  payhere_amount: string;
  payhere_currency: string;
  status_code: string;
  md5sig: string;
  method: string;
}

export interface PayHerePayload {
  sandbox: boolean;
  merchant_id: string; // PayHere Merchant ID
  notify_url: string; // URL to callback the status of the payment
  first_name: string; // Customer’s First Name
  last_name: string; // Customer’s Last Name
  email: string; // Customer’s Email
  phone: string; // Customer’s Phone No
  address: string; // Customer’s Address Line1 + Line2
  city: string; // Customer’s City
  country: string; // Customer’s Country
  order_id: string; // Order ID generated by the merchant
  items: string; // Item title or Order/Invoice number
  currency: string; // Currency Code (LKR/USD)
  amount: number; // Total Payment Amount
  hash: string; // Generated hash value
}
